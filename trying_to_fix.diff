diff --git a/src/cmd/link/internal/ld/data.go b/src/cmd/link/internal/ld/data.go
index d482db3fa6..df7ae2e3af 100644
--- a/src/cmd/link/internal/ld/data.go
+++ b/src/cmd/link/internal/ld/data.go
@@ -2044,8 +2044,14 @@ func (ctxt *Link) textaddress() {
 	prev_sect := sect
 	for _, s := range ctxt.Textp {
 		sect, va = SectForPkg(ctxt, s, prev_sect, va)
+		if va == 0x481000 {
+			fmt.Println("Found it")
+		}
+		prev_va := va
 		sect, n, va = assignAddress(ctxt, sect, n, s, va, false)
-
+		if prev_va == 0x481000 && va != 0x481000 {
+			fmt.Printf("We have %x\n", va)
+		}
 		trampoline(ctxt, s) // resolve jumps, may add trampolines if jump too far
 
 		// lay down trampolines after each function
diff --git a/src/cmd/link/internal/ld/gosb.go b/src/cmd/link/internal/ld/gosb.go
index 70137b0275..6306218529 100644
--- a/src/cmd/link/internal/ld/gosb.go
+++ b/src/cmd/link/internal/ld/gosb.go
@@ -61,8 +61,8 @@ func SectForPkg(ctxt *Link, s *sym.Symbol, prev *sym.Section, va uint64) (*sym.S
 				text.Align = sect.Align
 				text.Size = 0x8
 			}
-			prev.Length = va - sect.Vaddr
 			va = bloatAddress(va)
+			prev.Length = va - prev.Vaddr
 			sect.Vaddr = va
 			PkgsBloat[s.File] = sect
 			fmt.Printf("Section for %v starts at %x\n", s.File, va)
